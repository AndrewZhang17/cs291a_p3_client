{"version":3,"sources":["logo.svg","Compose.js","UserList.js","MessageList.js","LoginForm.js","App.js","reportWebVitals.js","index.js"],"names":["Compose","props","useState","message","setMessage","className","onSubmit","evt","preventDefault","data","FormData","append","fetch","server","method","headers","token","body","then","response","status","console","log","window","alert","type","id","value","onChange","e","target","UserList","users","map","user","MessageList","getTimeStamp","timeStamp","Date","parseFloat","toLocaleString","hour12","month","day","hour","minute","second","year","events","event","JSON","parse","elementRef","useRef","useEffect","current","scrollIntoView","behavior","ref","ScrollAnchor","LoginForm","setServer","username","setUsername","password","setPassword","json","callback","htmlFor","App","setToken","setUsers","setEvents","loggedIn","setLoggedIn","t","url","evtSource","EventSource","addEventListener","newUser","filter","item","close","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e46b8f7e.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React, { useState, useEffect } from \"react\";\nimport './Compose.css';\n\nfunction Compose(props) {\n    const [message, setMessage] = useState(\"\");\n\n    const handleSend = (evt) => {\n        evt.preventDefault();\n        \n        const data = new FormData()\n        data.append(\"message\", message)\n\n        fetch(props.server + \"/message\", {\n            method: 'POST', \n            headers: {\n                \"Authorization\": \"Bearer \" + props.token\n            },\n            body: data\n        })\n        .then(response => {\n            if(response.status === 201) {\n                console.log(response);\n                \n            }\n            else if(response.status === 403) {\n                window.alert(\"Token not valid.\");\n            }\n            else if(response.status === 422) {\n                window.alert(\"Empty message\");\n            }\n        });\n        setMessage(\"\")\n    }\n\n    return (\n        <div className=\"Compose\">\n            <form className= \"form\" onSubmit={handleSend}>\n                <input className = \"msgInput\" type=\"text\" id=\"msgInput\" value={message} onChange={e => setMessage(e.target.value)} />\n                <input className = \"submit\" type=\"submit\" value=\"Send\" />\n            </form>\n        </div>\n    )\n}\n\nexport default Compose;","import React, { useState, useEffect } from \"react\";\nimport './UserList.css';\n\nfunction UserList(props) {\n    console.log(props.users);\n    return (\n        <div className=\"UserList\">\n            <div className=\"UserListInner\">\n                <h1>Users</h1>\n                <ul>\n                    {props.users.map((user) =>\n                        <li key= {user}>{user}</li>\n                    )}\n                </ul>\n            </div>\n        </div>\n    )\n}\n\nexport default UserList;","import React, { useState, useEffect, useRef } from \"react\";\nimport './MessageList.css';\n\nfunction MessageList(props) {\n    function getTimeStamp(timeStamp){\n        return <p className =\"timeStamp\">{(new Date(parseFloat(timeStamp) * 1000)).toLocaleString('en-US', { hour12: false, month: \"2-digit\", day: \"2-digit\", hour: \"2-digit\", minute: \"2-digit\", second: \"2-digit\", year: \"numeric\" })} </p>\n    }\n    function ScrollAnchor(){ \n        const elementRef = useRef(); \n        useEffect(() => elementRef.current.scrollIntoView({behavior: 'smooth'})); \n        return <div ref={elementRef} />;\n    }\n    return (\n        <div className=\"MessageList\">\n            <h1>Messages</h1>\n            <ul>\n                {props.events.map((event) => {\n                    let data = JSON.parse(event.data);\n                    let type = event.type\n                    if (type === \"ServerStatus\") {\n                        return <li key= {data[\"created\"]}> {getTimeStamp(data[\"created\"])}\n                        <p className = \"StatusMessage\">{data[\"status\"]} </p> </li>\n                    }\n                    else if (type === \"Message\") {\n                        return <li key= {data[\"created\"]}> {getTimeStamp(data[\"created\"])}\n                         <p> {data[\"user\"]}: {data[\"message\"]} </p>  </li>\n                    }\n                    else if (type === \"Join\") {\n                        return <li key= {data[\"created\"]}>{getTimeStamp(data[\"created\"])}\n                        <p className = \"JoinMessage\"> {data[\"user\"]} Joined!</p></li>\n                    }\n                    else if (type === \"Part\") {\n                        return <li key= {data[\"created\"]}>{getTimeStamp(data[\"created\"])}\n                        <p className = \"PartMessage\">{data[\"user\"]} Parted!</p></li>\n                    }\n                })}\n            </ul>\n            {ScrollAnchor()}\n        </div>\n    )\n}\n\nexport default MessageList;","import React, { useState } from \"react\";\nimport './LoginForm.css';\n\nfunction LoginForm(props) {\n    const [server, setServer] = useState(\"\");\n    const [username, setUsername] = useState(\"\");\n    const [password, setPassword] = useState(\"\");\n\n    const handleSubmit = (evt) => {\n        evt.preventDefault();\n\n        const data = new FormData()\n        data.append(\"username\", username)\n        data.append(\"password\", password)\n\n        fetch(server + \"/login\", {\n            method: 'POST', \n            body: data\n        })\n        .then(response => {\n            if(response.status === 201) {\n                response.json().then(data => props.callback(data[\"token\"], server))\n                \n            }\n            else if(response.status === 403) {\n                \n                window.alert(\"Incorrect username or password.\");\n            }\n            else if(response.status === 422) {\n                window.alert(\"Username or password blank.\");\n            }\n        });\n    }\n\n    return (\n        <div className=\"LoginForm\">\n            <form onSubmit={handleSubmit}>\n                <label htmlFor=\"serverURL\">Chat URL:</label><br />\n                <input type=\"text\" id=\"serverURL\" value={server} onChange={e => setServer(e.target.value)}/><br />\n                <label htmlFor=\"username\">Username:</label><br />\n                <input type=\"text\" id=\"username\" value={username} onChange={e => setUsername(e.target.value)}/><br />\n                <label htmlFor=\"password\">Password:</label><br />\n                <input type=\"password\" id=\"password\" value={password} onChange={e => setPassword(e.target.value)}/><br /><br />\n                <input type=\"submit\" value=\"Log in\" />\n            </form>\n        </div>\n    )\n}\n\nexport default LoginForm;","import React, { useState } from \"react\";\nimport logo from './logo.svg';\nimport './App.css';\nimport Compose from './Compose.js';\nimport UserList from './UserList';\nimport MessageList from './MessageList';\nimport LoginForm from './LoginForm';\n\nfunction App() {\n  const [token, setToken] = useState(\"\");\n  const [users, setUsers] = useState([]);\n  const [events, setEvents] = useState([]);\n  const [server, setServer] = useState(\"\");\n  const [loggedIn, setLoggedIn] = useState(false);\n\n  const getUsers = () => {\n    return users;\n  };\n\n  const handleLogin = (t, url) => {\n    setToken(t);\n    setServer(url);\n\n    var evtSource = new EventSource(url + \"/stream/\" + t);\n\n    evtSource.addEventListener(\"Users\", function(event) {\n      setUsers(JSON.parse(event.data)[\"users\"]);\n    });\n\n    evtSource.addEventListener(\"Join\", function(event) {\n      let newUser = JSON.parse(event.data)[\"user\"];\n      console.log(\"IN JOIN\");\n      setUsers(users => users.filter(item => item !== newUser));\n      setUsers(users => [...users, newUser]);\n      setEvents(events => [...events, event]);\n    });\n\n    evtSource.addEventListener(\"Part\", function(event) {\n      let user = JSON.parse(event.data)[\"user\"];\n      setUsers(users => users.filter(item => item !== user));\n      setEvents(events => [...events, event]);\n    });\n  \n    evtSource.addEventListener(\"Disconnect\", function(event){\n      evtSource.close();  // make login appear again\n      setLoggedIn(false);\n    });\n  \n    evtSource.addEventListener(\"ServerStatus\", function(event){\n      setEvents(events => [...events, event]);\n    });\n\n    evtSource.addEventListener(\"Message\", function(event){\n      setEvents(events => [...events, event]);\n    });  \n\n    setLoggedIn(true);\n  };\n\n      \n\n  return (\n    <div className=\"App\">\n      <UserList users={users}/>\n      <div className=\"MessageComposeContainer\">\n        <MessageList events={events}/>\n        <Compose token={token} server={server}/>\n      </div>\n      {!loggedIn && <LoginForm callback={handleLogin}/>}\n    </div>\n  );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}